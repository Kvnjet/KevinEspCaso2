package UICiclismo;

import DatosCiclismo.*;
import LogicaCiclismo.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Kevin Alonso Espinoza Barrantes
 */
public class UIReportes extends javax.swing.JFrame {

    /**
     * 
     */
    private GestorPrincipal manager;
    
    DefaultTableModel modeloCarreras;
    
    /**
     * 
     * @param gestor 
     */
    public UIReportes(GestorPrincipal gestor) {
        initComponents();
        modeloCarreras = (DefaultTableModel)this.jTableReportes.getModel();
        this.setLocationRelativeTo(null);
        this.manager = gestor;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelReportes = new javax.swing.JPanel();
        jCheckBoxTodas = new javax.swing.JCheckBox();
        jCheckBoxFechas = new javax.swing.JCheckBox();
        jLabelFechaInicial = new javax.swing.JLabel();
        jLabelFechaFinal = new javax.swing.JLabel();
        jButtonPresentarReporte = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableReportes = new javax.swing.JTable();
        jPanelReporteTiempos = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableReporteTiempos = new javax.swing.JTable();

        setTitle("Reportes");

        jPanelReportes.setBorder(javax.swing.BorderFactory.createTitledBorder("Reportes de carreras"));

        jCheckBoxTodas.setText("Todas las carreras");
        jCheckBoxTodas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxTodasActionPerformed(evt);
            }
        });

        jCheckBoxFechas.setText("Carreras por fecha");
        jCheckBoxFechas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxFechasActionPerformed(evt);
            }
        });

        jLabelFechaInicial.setText("Fecha inicial:");

        jLabelFechaFinal.setText("Fehca final:");

        jButtonPresentarReporte.setText("Generar Reporte");
        jButtonPresentarReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPresentarReporteActionPerformed(evt);
            }
        });

        jTableReportes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Identificador", "Fecha", "Tipo", "Distancia", "Record"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableReportes);
        if (jTableReportes.getColumnModel().getColumnCount() > 0) {
            jTableReportes.getColumnModel().getColumn(0).setResizable(false);
            jTableReportes.getColumnModel().getColumn(1).setResizable(false);
            jTableReportes.getColumnModel().getColumn(2).setResizable(false);
            jTableReportes.getColumnModel().getColumn(3).setResizable(false);
            jTableReportes.getColumnModel().getColumn(4).setResizable(false);
        }

        javax.swing.GroupLayout jPanelReportesLayout = new javax.swing.GroupLayout(jPanelReportes);
        jPanelReportes.setLayout(jPanelReportesLayout);
        jPanelReportesLayout.setHorizontalGroup(
            jPanelReportesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelReportesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelReportesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanelReportesLayout.createSequentialGroup()
                        .addComponent(jCheckBoxTodas)
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBoxFechas)
                        .addGap(35, 35, 35)
                        .addComponent(jLabelFechaInicial)
                        .addGap(168, 168, 168)
                        .addComponent(jLabelFechaFinal)
                        .addGap(0, 152, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanelReportesLayout.createSequentialGroup()
                .addGap(310, 310, 310)
                .addComponent(jButtonPresentarReporte)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelReportesLayout.setVerticalGroup(
            jPanelReportesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelReportesLayout.createSequentialGroup()
                .addContainerGap(7, Short.MAX_VALUE)
                .addGroup(jPanelReportesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBoxTodas)
                    .addComponent(jCheckBoxFechas)
                    .addComponent(jLabelFechaInicial)
                    .addComponent(jLabelFechaFinal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonPresentarReporte))
        );

        jPanelReporteTiempos.setBorder(javax.swing.BorderFactory.createTitledBorder("Reporte de tiempos de carrera"));

        jTableReporteTiempos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nombre", "Velocidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableReporteTiempos);
        if (jTableReporteTiempos.getColumnModel().getColumnCount() > 0) {
            jTableReporteTiempos.getColumnModel().getColumn(0).setResizable(false);
            jTableReporteTiempos.getColumnModel().getColumn(1).setResizable(false);
        }

        javax.swing.GroupLayout jPanelReporteTiemposLayout = new javax.swing.GroupLayout(jPanelReporteTiempos);
        jPanelReporteTiempos.setLayout(jPanelReporteTiemposLayout);
        jPanelReporteTiemposLayout.setHorizontalGroup(
            jPanelReporteTiemposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelReporteTiemposLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanelReporteTiemposLayout.setVerticalGroup(
            jPanelReporteTiemposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelReporteTiemposLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 8, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelReportes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanelReporteTiempos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelReportes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelReporteTiempos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBoxTodasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxTodasActionPerformed
        this.jCheckBoxFechas.setSelected(false);
        if(this.jCheckBoxTodas.isSelected()){
            this.removerCarreras();
            this.manager.listarCarrerasFinalizadas();
        }
    }//GEN-LAST:event_jCheckBoxTodasActionPerformed

    private void jCheckBoxFechasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxFechasActionPerformed
        this.jCheckBoxTodas.setSelected(false);
    }//GEN-LAST:event_jCheckBoxFechasActionPerformed

    private void jButtonPresentarReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPresentarReporteActionPerformed
        
    }//GEN-LAST:event_jButtonPresentarReporteActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonPresentarReporte;
    private javax.swing.JCheckBox jCheckBoxFechas;
    private javax.swing.JCheckBox jCheckBoxTodas;
    private javax.swing.JLabel jLabelFechaFinal;
    private javax.swing.JLabel jLabelFechaInicial;
    private javax.swing.JPanel jPanelReporteTiempos;
    private javax.swing.JPanel jPanelReportes;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableReporteTiempos;
    private javax.swing.JTable jTableReportes;
    // End of variables declaration//GEN-END:variables

    public void agregarCarrera(Carrera carrera){
        this.modeloCarreras.addRow(new Object[]{carrera.getIdentificador(), carrera.getFecha(), carrera.getTipo(), carrera.getDistancia(), carrera.getRecord()});
    }

    public void removerCarreras(){
        int indice = this.modeloCarreras.getRowCount();
        if (indice > 0){
            for(int i = 0; i < indice; i++){
               this.modeloCarreras.removeRow(0);
            }
        }
    }
}
